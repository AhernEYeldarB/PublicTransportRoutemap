export declare class Cache<I, C> {
    private _cache;
    private _calcID;
    static hash(...args: any[]): string;
    constructor(calcID: (espObj: I | C) => string);
    has(espObj: I): boolean;
    set(obj: C): C;
    get(espObj: I): C | null;
    get(espObj: I, factory: () => C): C;
}
export declare class AsyncCache<I, C> {
    private _cache;
    private _calcID;
    static hash(...args: any[]): string;
    constructor(calcID: (espObj: I | C) => string);
    has(espObj: I): boolean;
    set(espObj: I, obj: Promise<C>): Promise<C>;
    get(espObj: I): Promise<C | null>;
    get(espObj: I, factory: () => Promise<C>): Promise<C>;
}
//# sourceMappingURL=cache.d.ts.map