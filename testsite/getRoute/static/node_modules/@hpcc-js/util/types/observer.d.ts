/**
 * IObserverHandle - Reference to an observing instance
 */
export interface IObserverHandle {
    release(): void;
    unwatch(): void;
}
export declare type CallbackFunction = (...args: any[]) => void;
export declare type EventID = string;
export declare class Observable<T extends EventID> {
    private _eventObservers;
    constructor(...events: T[]);
    addObserver(eventID: T, callback: CallbackFunction): IObserverHandle;
    removeObserver(eventID: T, callback: CallbackFunction): this;
    dispatchEvent(eventID: T, ...args: any[]): this;
    private _hasObserver;
    hasObserver(_eventID?: T): boolean;
}
//# sourceMappingURL=observer.d.ts.map