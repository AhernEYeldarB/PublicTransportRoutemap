export declare function debounce<R extends Promise<any>>(fn: () => R, timeout?: number): () => R;
export declare function debounce<P1, R extends Promise<any>>(fn: (param1: P1) => R, timeout?: number): (param1: P1) => R;
export declare function debounce<P1, P2, R extends Promise<any>>(fn: (param1: P1, param2: P2) => R, timeout?: number): (param1: P1, param2: P2) => R;
export declare function debounce<P1, P2, P3, R extends Promise<any>>(fn: (param1: P1, param2: P2, param3: P3) => R, timeout?: number): (param1: P1, param2: P2, param3: P3) => R;
export declare function debounce<P1, P2, P3, P4, R extends Promise<any>>(fn: (param1: P1, param2: P2, param3: P3, param4: P4) => R, timeout?: number): (param1: P1, param2: P2, param3: P3, param4: P4) => R;
export declare function promiseTimeout<T>(ms: number, promise: Promise<T>): Promise<T>;
export declare class AsyncOrderedQueue {
    private _q;
    private isTop;
    push<T>(p: Promise<T>): Promise<T>;
}
//# sourceMappingURL=debounce.d.ts.map