import * as tslib_1 from "tslib";
import { hashSum } from "./hashSum";
var Cache = /** @class */ (function () {
    function Cache(calcID) {
        this._cache = {};
        this._calcID = calcID;
    }
    Cache.hash = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return hashSum(tslib_1.__assign({}, args));
    };
    Cache.prototype.has = function (espObj) {
        return this._calcID(espObj) in this._cache;
    };
    Cache.prototype.set = function (obj) {
        this._cache[this._calcID(obj)] = obj;
        return obj;
    };
    Cache.prototype.get = function (espObj, factory) {
        var retVal = this._cache[this._calcID(espObj)];
        if (!retVal) {
            return factory ? this.set(factory()) : null;
        }
        return retVal;
    };
    return Cache;
}());
export { Cache };
var AsyncCache = /** @class */ (function () {
    function AsyncCache(calcID) {
        this._cache = {};
        this._calcID = calcID;
    }
    AsyncCache.hash = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return hashSum(tslib_1.__assign({}, args));
    };
    AsyncCache.prototype.has = function (espObj) {
        return this._calcID(espObj) in this._cache;
    };
    AsyncCache.prototype.set = function (espObj, obj) {
        this._cache[this._calcID(espObj)] = obj;
        return obj;
    };
    AsyncCache.prototype.get = function (espObj, factory) {
        var retVal = this._cache[this._calcID(espObj)];
        if (!retVal) {
            return factory ? this.set(espObj, factory()) : Promise.resolve(null);
        }
        return retVal;
    };
    return AsyncCache;
}());
export { AsyncCache };
//# sourceMappingURL=cache.js.map