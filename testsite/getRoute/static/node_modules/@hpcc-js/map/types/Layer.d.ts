import { ITooltip } from "@hpcc-js/api";
import { Layered } from "./Layered";
export declare class Layer extends Layered {
    _svgElement: any;
    _domElement: any;
    _topoJsonPromise: any;
    constructor();
    layerEnter(base: any, svgElement: any, domElement: any): void;
    enter(domNode: any, element: any): void;
    layerUpdate(base: any, forcePath?: any): void;
    update(domNode: any, element: any): void;
    onZoomed(): void;
    layerExit(base: any): void;
    exit(domNode: any, element: any): void;
    layerPreRender(): Promise<void>;
    render(callback?: (w: this) => void): this;
    layerZoomed(base: any): void;
    tooltip: any;
    tooltipHTML: (_: any) => any;
    tooltipFormat: (opts: any) => string;
    tooltipStyle: {
        (): string;
        (_: string): ITooltip;
    };
    tooltipStyle_exists: () => boolean;
    tooltipValueFormat: {
        (): string;
        (_: string): ITooltip;
    };
    tooltipValueFormat_exists: () => boolean;
    tooltipSeriesColor: {
        (): string;
        (_: string): ITooltip;
    };
    tooltipSeriesColor_exists: () => boolean;
    tooltipLabelColor: {
        (): string;
        (_: string): ITooltip;
    };
    tooltipLabelColor_exists: () => boolean;
    tooltipValueColor: {
        (): string;
        (_: string): ITooltip;
    };
    tooltipValueColor_exists: () => boolean;
    tooltipTick: {
        (): boolean;
        (_: boolean): ITooltip;
    };
    tooltipTick_exists: () => boolean;
    tooltipOffset: {
        (): number;
        (_: number): ITooltip;
    };
    tooltipOffset_exists: () => boolean;
}
//# sourceMappingURL=Layer.d.ts.map