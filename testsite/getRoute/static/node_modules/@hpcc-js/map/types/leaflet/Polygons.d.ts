import { LeafletEvent, Map } from "@hpcc-js/leaflet-shim";
import { FeatureLayer } from "./FeatureLayer";
declare type Lat = number;
declare type Lon = number;
declare type Point = [Lon, Lat];
export declare class Polygons extends FeatureLayer {
    _palette: any;
    protected fixDateLine(points: Point[]): Point[];
    hasBounds(): boolean;
    updateHexagons(): void;
    layerUpdate(map: Map): void;
    zoomEnd(e: LeafletEvent): void;
    moveEnd(e: LeafletEvent): void;
    clickHandler(e: any, row: any): void;
}
export interface Polygons {
    paletteID(): string;
    paletteID(_: string): this;
    paletteID_exists(): boolean;
    useClonedPalette(): boolean;
    useClonedPalette(_: boolean): this;
    useClonedPalette_exists(): boolean;
    polygonColumn(): string;
    polygonColumn(_: string): this;
    weightColumn(): string;
    weightColumn(_: string): this;
    opacity(): number;
    opacity(_: number): this;
    opacity_default(_: number): this;
    opacity_exists(): boolean;
}
export {};
//# sourceMappingURL=Polygons.d.ts.map