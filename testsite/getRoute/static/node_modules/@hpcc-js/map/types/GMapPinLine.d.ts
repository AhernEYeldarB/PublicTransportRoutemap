import { GMapLayered } from "./GMapLayered";
export declare class GMapPinLine extends GMapLayered {
    _lines: any;
    _pins: any;
    _fromView: any;
    _toView: any;
    _linesView: any;
    constructor();
    pinsData(): any;
    linesData(): any;
    enter(domNode: any, element: any): void;
    private _prevChecksum;
    update(domNode: any, element: any): void;
    exit(domNode: any, element: any): void;
    click(row: any, column: any, selected: any): void;
    dblclick(row: any, column: any, selected: any): void;
    autoScale: {
        (): boolean;
        (_: boolean): GMapPinLine;
    };
    fromPinColor: {
        (): string;
        (_: string): GMapPinLine;
    };
    fromPinColor_exists: () => boolean;
    fromLatitudeColumn: {
        (): string;
        (_: string): GMapPinLine;
    };
    fromLatitudeColumn_exists: () => boolean;
    fromLongtitudeColumn: {
        (): string;
        (_: string): GMapPinLine;
    };
    fromLongtitudeColumn_exists: () => boolean;
    fromColorColumn: {
        (): string;
        (_: string): GMapPinLine;
    };
    fromColorColumn_exists: () => boolean;
    fromTooltipColumn: {
        (): string;
        (_: string): GMapPinLine;
    };
    fromTooltipColumn_exists: () => boolean;
    toPinColor: {
        (): string;
        (_: string): GMapPinLine;
    };
    toPinColor_exists: () => boolean;
    toLatitudeColumn: {
        (): string;
        (_: string): GMapPinLine;
    };
    toLatitudeColumn_exists: () => boolean;
    toLongtitudeColumn: {
        (): string;
        (_: string): GMapPinLine;
    };
    toLongtitudeColumn_exists: () => boolean;
    toColorColumn: {
        (): string;
        (_: string): GMapPinLine;
    };
    toColorColumn_exists: () => boolean;
    toTooltipColumn: {
        (): string;
        (_: string): GMapPinLine;
    };
    toTooltipColumn_exists: () => boolean;
}
//# sourceMappingURL=GMapPinLine.d.ts.map