import { Layer } from "./Layer";
import "../src/Pins.css";
export declare class Pins extends Layer {
    _geohash: any;
    _pinsTransform: any;
    _selection: any;
    pinsPaths: any;
    constructor();
    pinsData(): any;
    layerEnter(base: any, svgElement: any, domElement: any): void;
    layerUpdate(base: any): void;
    layerZoomed(base: any): void;
    pinTextDY(): number;
    svgPinPath(): string;
    rectanglePinPath(): string;
    rectanglePath(): string;
    circlePinPath(): string;
    circlePath(): string;
    click(row: any, column: any, selected: any): void;
    dblclick(row: any, column: any, selected: any): void;
    latColumn: {
        (): string;
        (_: string): Pins;
    };
    latColumn_exists: () => boolean;
    longColumn: {
        (): string;
        (_: string): Pins;
    };
    longColumn_exists: () => boolean;
    geohashColumn: {
        (): string;
        (_: string): Pins;
    };
    geohashColumn_exists: () => boolean;
    tooltipColumn: {
        (): string;
        (_: string): Pins;
    };
    tooltipColumn_exists: () => boolean;
    opacity: {
        (): number;
        (_: number): Pins;
    };
    opacity_exists: () => boolean;
    fillColor: {
        (): string;
        (_: string): Pins;
    };
    fillColor_exists: () => boolean;
    omitNullLatLong: {
        (): boolean;
        (_: boolean): Pins;
    };
    omitNullLatLong_exists: () => boolean;
    strokeWidth: {
        (): number;
        (_: number): Pins;
    };
    strokeWidth_exists: () => boolean;
    strokeColor: {
        (): string;
        (_: string): Pins;
    };
    strokeColor_exists: () => boolean;
    fontSize: {
        (): number;
        (_: number): Pins;
    };
    fontSize_exists: () => boolean;
    fontFamily: {
        (): string;
        (_: string): Pins;
    };
    fontFamily_exists: () => boolean;
    fontColor: {
        (): string;
        (_: string): Pins;
    };
    fontColor_exists: () => boolean;
    pinType: {
        (): string;
        (_: string): Pins;
    };
    pinType_exists: () => boolean;
    arrowWidth: {
        (): number;
        (_: number): Pins;
    };
    arrowWidth_exists: () => boolean;
    arrowHeight: {
        (): number;
        (_: number): Pins;
    };
    arrowHeight_exists: () => boolean;
    pinWidth: {
        (): number;
        (_: number): Pins;
    };
    pinWidth_exists: () => boolean;
    pinHeight: {
        (): number;
        (_: number): Pins;
    };
    pinHeight_exists: () => boolean;
    cornerRadius: {
        (): number;
        (_: number): Pins;
    };
    cornerRadius_exists: () => boolean;
    pinRadius: {
        (): number;
        (_: number): Pins;
    };
    pinRadius_exists: () => boolean;
    textBaseline: {
        (): string;
        (_: string): Pins;
    };
    textBaseline_exists: () => boolean;
}
//# sourceMappingURL=Pins.d.ts.map