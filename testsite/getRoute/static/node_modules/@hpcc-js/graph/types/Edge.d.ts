import { SVGWidget, TextBox, Widget } from "@hpcc-js/common";
import "../src/Edge.css";
export declare class Edge extends SVGWidget {
    protected _points: any[];
    protected _weight: number;
    protected _strokeDasharray: number[];
    protected _hidden: boolean;
    protected _textBox: TextBox;
    protected _sourceVertex: Widget;
    protected _targetVertex: Widget;
    protected _elementPath: any;
    protected _graphID: any;
    constructor();
    graphID(_: any): any;
    sourceVertex(): Widget;
    sourceVertex(_: Widget): this;
    targetVertex(): Widget;
    targetVertex(_: Widget): this;
    weight(): number;
    weight(_: number): this;
    points(_: any): any[];
    points(_: any[], transitionDuration?: any, skipPushMarkers?: any): this;
    hidden(_: any): boolean | this;
    text(): string;
    text(_: string): this;
    enter(domNode: any, element: any): void;
    update(domNode: any, element: any, transitionDuration?: any, skipPushMarkers?: any): void;
    exit(domNode: any, element: any): void;
    _findMidPoint(points: any): any;
    _calculateEdgePoints(source: any, target: any, _points: any): any;
}
export interface Edge {
    arcDepth(): number;
    arcDepth(_: number): this;
    showControlPoints(): boolean;
    showControlPoints(_: boolean): this;
    showArc(): boolean;
    showArc(_: boolean): this;
    tooltip(): string;
    tooltip(_: string): this;
    sourceMarker(): string;
    sourceMarker(_: string): this;
    sourceMarker_exists: () => boolean;
    targetMarker(): string;
    targetMarker(_: string): this;
    targetMarker_exists: () => boolean;
    strokeDasharray(): string;
    strokeDasharray(_: string): this;
    strokeDasharray_exists: () => boolean;
    strokeColor(): string;
    strokeColor(_: string): this;
    strokeColor_exists: () => boolean;
    text_shape_colorFill(): string;
    text_shape_colorFill(_: string): this;
    text_shape_colorStroke(): string;
    text_shape_colorStroke(_: string): this;
    text_text_colorFill(): string;
    text_text_colorFill(_: string): this;
}
//# sourceMappingURL=Edge.d.ts.map