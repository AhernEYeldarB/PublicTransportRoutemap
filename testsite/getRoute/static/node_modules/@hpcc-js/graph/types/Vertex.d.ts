import { Icon, SVGWidget, TextBox } from "@hpcc-js/common";
import "../src/Vertex.css";
export interface IAnnotation {
    faChar: string;
    tooltip?: string;
    shape_colorFill?: string;
    shape_colorStroke?: string;
    image_colorFill?: string;
}
export declare class Vertex extends SVGWidget {
    protected _icon: Icon;
    protected _textBox: TextBox;
    protected _annotationWidgets: {};
    protected _graphID: any;
    constructor();
    getIconBBox(): {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    getBBox(refresh?: boolean, round?: boolean): {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    enter(domNode: any, element: any): void;
    _prevHash: any;
    update(domNode: any, element: any): void;
    exit(domNode: any, element: any): void;
    contains(point: any): boolean;
    intersection(pointA: any, pointB: any): any;
    mouseover(d: any): void;
    mouseout(d: any): void;
}
export interface Vertex {
    faChar(): string;
    faChar(_: string): this;
    imageUrl(): string;
    imageUrl(_: string): this;
    icon_diameter(): number;
    icon_diameter(_: number): this;
    icon_paddingPercent(): number;
    icon_paddingPercent(_: number): this;
    icon_shape_colorFill(): string;
    icon_shape_colorFill(_: string): this;
    icon_shape_colorStroke(): string;
    icon_shape_colorStroke(_: string): this;
    icon_image_colorFill(): string;
    icon_image_colorFill(_: string): this;
    centroid(): boolean;
    centroid(_: boolean): this;
    text(): string;
    text(_: string): this;
    anchor(): string;
    anchor(_: string): this;
    textbox_shape_colorStroke(): string;
    textbox_shape_colorStroke(_: string): this;
    textbox_shape_colorFill(): string;
    textbox_shape_colorFill(_: string): this;
    textbox_text_colorFill(): string;
    textbox_text_colorFill(_: string): this;
    iconAnchor(): "" | "start" | "middle" | "end" | "left";
    iconAnchor(_: "" | "start" | "middle" | "end" | "left"): this;
    iconTooltip(): string;
    iconTooltip(_: string): this;
    tooltip(): string;
    tooltip(_: string): this;
    annotationDiameter(): number;
    annotationDiameter(_: number): this;
    annotationSpacing(): number;
    annotationSpacing(_: number): this;
    annotationIcons(): IAnnotation[];
    annotationIcons(_: IAnnotation[]): this;
}
//# sourceMappingURL=Vertex.d.ts.map