import { HTMLWidget } from "@hpcc-js/common";
import "../src/CalendarHeatMap.css";
export declare class CalendarHeatMap extends HTMLWidget {
    _prevDateColumn: any;
    _prevAggrType: any;
    _prevAggrColumn: any;
    _prevAggrDeltaColumn: any;
    _view: any;
    _parentNode: any;
    constructor();
    calendarData(): any;
    calcDelta(row: any): number;
    enter(domNode: any, element: any): void;
    update(domNode: any, element: any): void;
    exit(domNode: any, element: any): void;
    click(row: any, column: any, selected: any): void;
    dblclick(row: any, column: any, selected: any): void;
    _palette: any;
    paletteID: {
        (): string;
        (_: string): CalendarHeatMap;
    };
    paletteID_exists: () => boolean;
    dateColumn: {
        (): string;
        (_: string): CalendarHeatMap;
    };
    dateColumn_exists: () => boolean;
    datePattern: {
        (): string;
        (_: string): CalendarHeatMap;
    };
    datePattern_exists: () => boolean;
    aggrType: {
        (): string;
        (_: string): CalendarHeatMap;
    };
    aggrType_exists: () => boolean;
    aggrColumn: {
        (): string;
        (_: string): CalendarHeatMap;
    };
    aggrColumn_exists: () => boolean;
    aggrDeltaColumn: {
        (): string;
        (_: string): CalendarHeatMap;
    };
    aggrDeltaColumn_exists: () => boolean;
    _selection: any;
}
export interface CalendarHeatMap {
    dayStrokeColor(): string;
    dayStrokeColor(_: string): this;
    monthStrokeColor(): string;
    monthStrokeColor(_: string): this;
    dayStrokeWidth(): number;
    dayStrokeWidth(_: number): this;
    monthStrokeWidth(): number;
    monthStrokeWidth(_: number): this;
}
//# sourceMappingURL=CalendarHeatMap.d.ts.map