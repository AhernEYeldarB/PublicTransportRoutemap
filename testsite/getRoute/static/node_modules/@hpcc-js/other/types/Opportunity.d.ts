import { PropertyExt, SVGWidget } from "@hpcc-js/common";
import "../src/Opportunity.css";
export declare class Column extends PropertyExt {
    _owner: Opportunity;
    constructor();
    owner(): Opportunity;
    owner(_: Opportunity): this;
    valid(): boolean;
}
export interface Column {
    headerLabel(): string;
    headerLabel(_: string): this;
}
export declare class MouseHoverColumn extends PropertyExt {
    _owner: Opportunity;
    constructor();
    owner(): Opportunity;
    owner(_: Opportunity): this;
    valid(): boolean;
}
export interface MouseHoverColumn {
    hoverValue(): string;
    hoverValue(_: string): this;
    hoverList(): string;
    hoverList(_: string): this;
}
export declare class ColumnDropdown extends PropertyExt {
    _owner: Opportunity;
    constructor();
    owner(): Opportunity;
    owner(_: Opportunity): this;
    valid(): boolean;
}
export interface ColumnDropdown {
    columnIndex(): number;
    columnIndex(_: number): this;
    ColumnDropdownList(): string;
    ColumnDropdownList(_: string): this;
}
export declare class Opportunity extends SVGWidget {
    groupCount: any;
    svg: any;
    tooltipdiv: any;
    Column: any;
    MouseHoverColumn: any;
    ColumnDropdown: any;
    constructor();
    enter(domNode: any, element: any): void;
    update(domNode: any, element: any): void;
    exit(domNode: any, element: any): void;
    getIds(): string[];
    previousGroup: {
        (): string;
        (_: string): Opportunity;
    };
    previousGroup_exists: () => boolean;
    currentGroup: {
        (): string;
        (_: string): Opportunity;
    };
    currentGroup_exists: () => boolean;
    opportunityId: {
        (): string;
        (_: string): Opportunity;
    };
    opportunityId_exists: () => boolean;
    url: {
        (): string;
        (_: string): Opportunity;
    };
    url_exists: () => boolean;
    width_exists: () => boolean;
    addColumn: {
        (): string;
        (_: string): Opportunity;
    };
    addColumn_exists: () => boolean;
    removeColumn: {
        (): string;
        (_: string): Opportunity;
    };
    removeColumn_exists: () => boolean;
    headerLabels: {
        (): any[];
        (_: any[]): Opportunity;
    };
    headerLabels_exists: () => boolean;
    mouseHover: {
        (): any[];
        (_: any[]): Opportunity;
    };
    mouseHover_exists: () => boolean;
    columnData: {
        (): any[];
        (_: any[]): Opportunity;
    };
    columnData_exists: () => boolean;
}
//# sourceMappingURL=Opportunity.d.ts.map