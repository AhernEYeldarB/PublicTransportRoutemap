{"version":3,"file":"cli.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/__package__.ts","../src/ddl/v1.ts","../src/ddl/v2_0_23.ts","../src/dermatology.ts","../src/upgrade.ts","../src/cli.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const PKG_NAME = \"@hpcc-js/ddl-shim\";\r\nexport const PKG_VERSION = \"2.13.2\";\r\nexport const BUILD_VERSION = \"2.10.1\";\r\n","export type StringStringDict = { [key: string]: string; };\r\n\r\n//  Datasource  ===============================================================\r\nexport type IFilterRule = \"==\" | \"!=\" | \"<\" | \"<=\" | \">\" | \">=\" | \"set\" | \"notequals\";\r\nexport interface IFilter {\r\n    fieldid: string;\r\n    nullable: boolean;\r\n    rule: IFilterRule;\r\n    minid?: string;\r\n    maxid?: string;\r\n}\r\n\r\nexport interface IOutput {\r\n    id: string;\r\n    from?: string;\r\n    filter?: IFilter[];\r\n    notify?: string[];\r\n}\r\n\r\nexport interface IDatasource {\r\n    id: string;\r\n    filter?: IFilter[];\r\n    outputs: IOutput[];\r\n}\r\n\r\nexport interface IWorkunitDatasource extends IDatasource {\r\n    WUID: boolean;\r\n}\r\nexport function isWorkunitDatasource(ref: IAnyDatasource): ref is IWorkunitDatasource {\r\n    return (ref as IWorkunitDatasource).WUID !== undefined;\r\n}\r\n\r\nexport interface IDatabombDatasource extends IDatasource {\r\n    databomb: true;\r\n}\r\nexport function isDatabombDatasource(ref: IAnyDatasource): ref is IDatabombDatasource {\r\n    return (ref as IDatabombDatasource).databomb === true;\r\n}\r\n\r\nexport interface IHipieDatasource extends IDatasource {\r\n    URL: string;\r\n}\r\nexport function isHipieDatasource(ref: IAnyDatasource): ref is IHipieDatasource {\r\n    return (ref as IHipieDatasource).URL !== undefined;\r\n}\r\n\r\nexport type IAnyDatasource = IWorkunitDatasource | IDatabombDatasource | IHipieDatasource;\r\n//  Event  ====================================================================\r\nexport interface IEventUpdate {\r\n    visualization: string;\r\n    instance?: string;\r\n    datasource: string;\r\n    col?: string;\r\n    merge: boolean;\r\n    mappings?: StringStringDict;\r\n}\r\n\r\nexport interface IEvent {\r\n    mappings?: StringStringDict;  // Legacy\r\n    updates: IEventUpdate[];\r\n}\r\n\r\n//  Mappings  =================================================================\r\nexport interface IPieMapping {\r\n    label: string;\r\n    weight: string;\r\n}\r\n\r\nexport interface ILineMapping {\r\n    x: string[];\r\n    y: string[];\r\n}\r\n\r\nexport interface ITableMapping {\r\n    value: string[];\r\n}\r\n\r\nexport interface IChoroMapping {\r\n    weight: string | string[];\r\n}\r\n\r\nexport interface IChoroUSStateMapping extends IChoroMapping {\r\n    state: string;\r\n}\r\n\r\nexport interface IChoroUSCountyMapping extends IChoroMapping {\r\n    county: string;\r\n}\r\n\r\nexport interface IChoroGeohashMapping extends IChoroMapping {\r\n    geohash: string;\r\n}\r\n\r\nexport interface IGraphMapping {\r\n    uid: string;\r\n    label: string;\r\n    weight: string;\r\n    flags: string;\r\n}\r\n\r\nexport interface IGraphLinkMapping {\r\n    uid: string;\r\n}\r\n\r\nexport interface IHeatMapMapping {\r\n    x: string;\r\n    y: string;\r\n    weight: string;\r\n}\r\n\r\nexport interface ISliderMapping {\r\n    label: string;\r\n}\r\n//  Source  ===================================================================\r\nexport interface ISource {\r\n    id: string;\r\n    output: string;\r\n    sort?: string[];\r\n    first?: string | number;\r\n    reverse?: boolean;\r\n    properties?: StringStringDict;  //  TODO Needed?\r\n}\r\n\r\nexport interface IPieSource extends ISource {\r\n    mappings: IPieMapping;\r\n}\r\n\r\nexport interface ILineSource extends ISource {\r\n    mappings: ILineMapping;\r\n}\r\n\r\nexport interface ITableSource extends ISource {\r\n    mappings: ITableMapping;\r\n}\r\n\r\nexport interface IGraphLink {\r\n    mappings: IGraphLinkMapping;\r\n    childfile: string;\r\n}\r\n\r\nexport interface IGraphSource extends ISource {\r\n    mappings: IGraphMapping;\r\n    link: IGraphLink;\r\n}\r\n\r\nexport interface IHeatMapSource extends ISource {\r\n    mappings: IHeatMapMapping;\r\n}\r\n\r\nexport interface IChoroSource extends ISource {\r\n    mappings: IAnyChoroMapping;\r\n}\r\n\r\nexport interface ISliderSource extends ISource {\r\n    mappings: ISliderMapping;\r\n}\r\n\r\n//  Visualization  ============================================================\r\nexport type VisualizationType = \"PIE\" | \"LINE\" | \"BAR\" | \"TABLE\" | \"CHORO\" | \"GRAPH\" | \"HEAT_MAP\" | \"SLIDER\" | \"SUMMARY\" | \"FORM\" | \"2DCHART\" | \"WORD_CLOUD\" | \"BUBBLE\";\r\nexport type VisualizationFieldDataType = \"bool\" | \"boolean\" | \"integer\" | \"integer4\" | \"integer8\" | \"unsigned\" | \"unsigned4\" | \"unsigned8\" | \"float\" | \"double\" | \"real\" | \"real4\" | \"real8\" | \"string\" | \"date\" | \"time\" | \"geohash\" | \"dataset\" | \"visualization\";\r\nexport type VisualizationFieldType = VisualizationFieldDataType | \"range\";\r\nexport type VisualizationFieldFuncitonType = \"SUM\" | \"AVE\" | \"MIN\" | \"MAX\" | \"SCALE\";\r\n\r\nexport interface IVisualizationField {\r\n    id: string;\r\n    properties: {\r\n        label?: string;\r\n        datatype: VisualizationFieldDataType;\r\n        default?: any[];\r\n        function?: VisualizationFieldFuncitonType;\r\n        params?: {\r\n            param1: string;\r\n            param2: string;\r\n        }\r\n        type: VisualizationFieldType;\r\n    };\r\n}\r\n\r\nexport interface IVisualization {\r\n    id: string;\r\n    title?: string;\r\n    type: VisualizationType;\r\n    fields?: IVisualizationField[];\r\n    properties?: {\r\n        charttype?: string,\r\n\r\n        //  TODO Split Known Properties  ---\r\n        [key: string]: any\r\n    };\r\n    events?: { [key: string]: IEvent };\r\n    onSelect?: any;  // legacy\r\n    color?: any; // legacy\r\n}\r\n\r\nexport interface IPieVisualization extends IVisualization {\r\n    type: \"PIE\" | \"BAR\";\r\n    source: IPieSource;\r\n}\r\nexport function isPieVisualization(viz: IAnyVisualization): viz is IPieVisualization {\r\n    return (viz as IPieVisualization).type === \"PIE\" || (viz as IPieVisualization).type === \"BAR\";\r\n}\r\n\r\nexport interface ILineVisualization extends IVisualization {\r\n    type: \"LINE\";\r\n    source: ILineSource;\r\n}\r\nexport function isLineVisualization(viz: IAnyVisualization): viz is ILineVisualization {\r\n    return (viz as ILineVisualization).type === \"LINE\";\r\n}\r\n\r\nexport type ChoroColor = \"default\" | \"YlGn\" | \"YlGnBu\" | \"GnBu\" | \"BuGn\" | \"PuBuGn\" | \"PuBu\" | \"BuPu\" | \"RdPu\" | \"PuRd\" | \"OrRd\" | \"YlOrRd\" | \"YlOrBr\" | \"Purples\" | \"Blues\" | \"Greens\" | \"Oranges\" | \"Reds\" | \"Greys\" | \"PuOr\" | \"BrBG\" | \"PRGn\" | \"PiYG\" | \"RdBu\" | \"RdGy\" | \"RdYlBu\" | \"Spectral\" | \"RdYlGn\" | \"RdWhGr\";\r\nexport interface IChoroVisualization extends IVisualization {\r\n    type: \"CHORO\";\r\n    source: IChoroSource;\r\n\r\n    visualizations?: IChoroVisualization[];\r\n    color?: ChoroColor;\r\n}\r\nexport function isChoroVisualization(viz: IAnyVisualization): viz is IChoroVisualization {\r\n    return (viz as IChoroVisualization).type === \"CHORO\";\r\n}\r\n\r\nexport interface ITableVisualization extends IVisualization {\r\n    type: \"TABLE\";\r\n    label: string[];\r\n    source: ITableSource;\r\n}\r\nexport function isTableVisualization(viz: IAnyVisualization): viz is ITableVisualization {\r\n    return (viz as ITableVisualization).type === \"TABLE\";\r\n}\r\n\r\nexport interface ISliderVisualization extends IVisualization {\r\n    type: \"SLIDER\";\r\n    source: ISliderSource;\r\n    range?: number[];\r\n}\r\nexport function isSliderVisualization(viz: IAnyVisualization): viz is ISliderVisualization {\r\n    return (viz as ISliderVisualization).type === \"SLIDER\";\r\n}\r\n\r\nexport interface IIcon {\r\n    [id: string]: string | number | boolean;\r\n}\r\n\r\nexport type IValueMappings = { [key: string]: IIcon; };\r\n\r\nexport interface IVisualizationIcon {\r\n    fieldid?: string;\r\n    faChar?: string;\r\n    valuemappings?: IValueMappings;\r\n}\r\n\r\nexport interface IGraphVisualization extends IVisualization {\r\n    type: \"GRAPH\";\r\n    source: IGraphSource;\r\n\r\n    label: string[];\r\n    icon: IVisualizationIcon;\r\n    flag: IVisualizationIcon[];\r\n}\r\nexport function isGraphVisualization(viz: IAnyVisualization): viz is IGraphVisualization {\r\n    return (viz as IGraphVisualization).type === \"GRAPH\";\r\n}\r\n\r\nexport interface IHeatMapVisualization extends IVisualization {\r\n    type: \"HEAT_MAP\";\r\n    source: IHeatMapSource;\r\n}\r\nexport function isHeatMapVisualization(viz: IAnyVisualization): viz is IHeatMapVisualization {\r\n    return (viz as IHeatMapVisualization).type === \"HEAT_MAP\";\r\n}\r\n\r\nexport interface IFormVisualization extends IVisualization {\r\n    type: \"FORM\";\r\n}\r\nexport function isFormVisualization(viz: IAnyVisualization): viz is IFormVisualization {\r\n    return (viz as IFormVisualization).type === \"FORM\";\r\n}\r\n\r\n//  Dashboard  ================================================================\r\nexport interface IDashboard {\r\n    id?: string;\r\n    title?: string;\r\n    enable?: string;\r\n    label?: string;\r\n    primary?: boolean;\r\n    visualizations: IAnyVisualization[];\r\n}\r\n\r\nexport interface IDDL {\r\n    dashboards: IDashboard[];\r\n    datasources: IAnyDatasource[];\r\n    hipieversion: string;\r\n    visualizationversion: string;\r\n}\r\n\r\n//  DDL  ======================================================================\r\nexport type DDLSchema = IDDL;\r\n\r\n//  Helpers  ==================================================================\r\nexport type IAnyChoroMapping = IChoroUSStateMapping | IChoroUSCountyMapping | IChoroGeohashMapping;\r\nexport function isUSStateMapping(mappings: IAnyChoroMapping) {\r\n    return (mappings as IChoroUSStateMapping).state !== undefined;\r\n}\r\nexport function isUSCountyMapping(mappings: IAnyChoroMapping) {\r\n    return (mappings as IChoroUSCountyMapping).county !== undefined;\r\n}\r\nexport function isGeohashMapping(mappings: IAnyChoroMapping) {\r\n    return (mappings as IChoroGeohashMapping).geohash !== undefined;\r\n}\r\nexport type IAnyMapping = IPieMapping | ILineMapping | IGraphMapping | IAnyChoroMapping | ITableMapping | IHeatMapMapping;\r\nexport type IAnySource = IPieSource | ILineSource | ITableSource | IChoroSource | IGraphSource | IHeatMapSource;\r\nexport type IAnyVisualization = IPieVisualization | ILineVisualization | ITableVisualization | IChoroVisualization | IGraphVisualization | IHeatMapVisualization | ISliderVisualization | IFormVisualization;\r\n","export type RowType = { [key: string]: any; };\r\n\r\n//  Fields  ==============================================================\r\nexport type Number64 = string;\r\nexport type Range = [number | string, number | string];\r\nexport type Dataset = any[];\r\nexport type IFieldType = \"boolean\" | \"number\" | \"number64\" | \"string\" | \"range\" | \"dataset\" | \"object\";\r\n\r\nexport interface IFieldBoolean {\r\n    type: \"boolean\";\r\n    id: string;\r\n    default?: boolean;\r\n}\r\n\r\nexport interface IFieldNumber {\r\n    type: \"number\";\r\n    id: string;\r\n    default?: number;\r\n}\r\n\r\nexport interface IFieldNumber64 {\r\n    type: \"number64\";\r\n    id: string;\r\n    default?: Number64;\r\n}\r\n\r\nexport interface IFieldString {\r\n    type: \"string\";\r\n    id: string;\r\n    default?: string;\r\n}\r\n\r\nexport interface IFieldRange {\r\n    type: \"range\";\r\n    id: string;\r\n    default?: Range;\r\n}\r\n\r\nexport interface IFieldDataset {\r\n    type: \"dataset\";\r\n    id: string;\r\n    default?: Dataset;\r\n    children: IField[];\r\n}\r\n\r\nexport interface IFieldObject {\r\n    type: \"object\";\r\n    id: string;\r\n    default?: object;\r\n    fields: { [key: string]: IField };\r\n}\r\n\r\nexport type IField = IFieldBoolean | IFieldNumber | IFieldNumber64 | IFieldString | IFieldRange | IFieldDataset | IFieldObject;\r\n\r\n//  Datasources  ==============================================================\r\nexport type IServiceType = \"wuresult\" | \"hipie\" | \"roxie\";\r\nexport type IDatasourceType = IServiceType | \"logicalfile\" | \"form\" | \"databomb\";\r\nexport type DatasourceType = ILogicalFile | IForm | IDatabomb | IWUResult | IHipieService | IRoxieService;\r\n\r\nexport interface IDatasource {\r\n    type: IDatasourceType;\r\n    id: string;\r\n    fields: IField[];\r\n}\r\n\r\nexport interface IESPService extends IDatasource {\r\n    url: string;\r\n}\r\n\r\nexport interface IService {\r\n    type: IServiceType;\r\n    id: string;\r\n    url: string;\r\n}\r\n\r\nexport interface IOutput {\r\n    fields: IField[];\r\n}\r\n\r\nexport type OutputDict = { [key: string]: IOutput };\r\n\r\nexport interface IWUResult extends IService {\r\n    type: \"wuresult\";\r\n    wuid: string;\r\n    outputs: OutputDict;\r\n}\r\n\r\nexport interface ILogicalFile extends IESPService {\r\n    type: \"logicalfile\";\r\n    logicalFile: string;\r\n}\r\n\r\nexport interface IRoxieService extends IService {\r\n    type: \"roxie\";\r\n    querySet: string;\r\n    queryID: string;\r\n    inputs: IField[];\r\n    outputs: OutputDict;\r\n}\r\n\r\nexport interface IHipieService extends IService {\r\n    type: \"hipie\";\r\n    querySet: string;\r\n    queryID: string;\r\n    inputs: IField[];\r\n    outputs: OutputDict;\r\n}\r\n\r\nexport interface IForm extends IDatasource {\r\n    type: \"form\";\r\n}\r\n\r\nexport type IDatabombFormat = \"csv\" | \"tsv\" | \"json\";\r\nexport interface IDatabomb extends IDatasource {\r\n    type: \"databomb\";\r\n    format: IDatabombFormat;\r\n    payload?: string;\r\n}\r\n\r\n//  IDatasorceRef  ---\r\nexport interface IDatasourceBaseRef {\r\n    id: string;\r\n}\r\n\r\nexport interface IDatabombRef extends IDatasourceBaseRef {\r\n}\r\n\r\nexport interface IWUResultRef extends IDatasourceBaseRef {\r\n    output: string;\r\n}\r\n\r\nexport interface IRequestField {\r\n    source: string;\r\n    remoteFieldID: string;\r\n    localFieldID: string;\r\n}\r\n\r\nexport interface IRoxieServiceRef extends IDatasourceBaseRef {\r\n    request: IRequestField[];\r\n    output: string;\r\n}\r\n\r\nexport type IDatasourceRef = IDatabombRef | IWUResultRef | IRoxieServiceRef;\r\n\r\nexport function isDatabombRef(ref: IDatasourceRef): ref is IDatabombRef {\r\n    return !isWUResultRef(ref) && !isRoxieServiceRef(ref);\r\n}\r\n\r\nexport function isWUResultRef(ref: IDatasourceRef): ref is IWUResultRef {\r\n    return (ref as IWUResultRef).output !== undefined && !isRoxieServiceRef(ref);\r\n}\r\n\r\nexport function isRoxieServiceRef(ref: IDatasourceRef): ref is IRoxieServiceRef {\r\n    return (ref as IRoxieServiceRef).request !== undefined;\r\n}\r\n\r\n//  Activities  ===============================================================\r\nexport type IActivityType = \"filter\" | \"project\" | \"groupby\" | \"sort\" | \"limit\" | \"mappings\";\r\nexport type ActivityType = IFilter | IProject | IGroupBy | ISort | ILimit | IMappings;\r\n\r\nexport interface IActivity {\r\n    type: IActivityType;\r\n}\r\n\r\n//  Filter  ===================================================================\r\nexport type IMappingConditionType = \"==\" | \"!=\" | \">\" | \">=\" | \"<\" | \"<=\" | \"range\" | \"in\";\r\nexport interface IMapping {\r\n    remoteFieldID: string;\r\n    localFieldID: string;\r\n    condition: IMappingConditionType;\r\n    nullable: boolean;\r\n}\r\n\r\nexport interface IFilterCondition {\r\n    viewID: string;\r\n    mappings: IMapping[];\r\n}\r\n\r\nexport interface IFilter extends IActivity {\r\n    type: \"filter\";\r\n    conditions: IFilterCondition[];\r\n}\r\nexport function isFilterActivity(activity: IActivity): activity is IFilter {\r\n    return activity.type === \"filter\";\r\n}\r\n\r\n//  Project  ==================================================================\r\nexport interface IEquals {\r\n    fieldID: string;\r\n    type: \"=\";\r\n    sourceFieldID: string;\r\n    transformations?: MultiTransformationType[];\r\n}\r\nexport type ICalculatedType = \"+\" | \"-\" | \"*\" | \"/\";\r\nexport interface ICalculated {\r\n    fieldID: string;\r\n    type: ICalculatedType;\r\n    sourceFieldID1: string;\r\n    sourceFieldID2: string;\r\n}\r\n\r\nexport interface IScale {\r\n    fieldID: string;\r\n    type: \"scale\";\r\n    sourceFieldID: string;\r\n    factor: number;\r\n}\r\n\r\nexport interface ITemplate {\r\n    fieldID: string;\r\n    type: \"template\";\r\n    template: string;\r\n}\r\n\r\nexport interface IMapMapping {\r\n    value: any;\r\n    newValue: any;\r\n}\r\n\r\nexport interface IMap {\r\n    fieldID: string;\r\n    type: \"map\";\r\n    sourceFieldID: string;\r\n    default: any;\r\n    mappings: IMapMapping[];\r\n}\r\n\r\nexport type MultiTransformationType = IEquals | ICalculated | IScale | ITemplate | IMap;\r\nexport interface IMulti {\r\n    fieldID: string;\r\n    type: \"multi\";\r\n    transformations: MultiTransformationType[];\r\n}\r\n\r\nexport type ProjectTransformationType = MultiTransformationType | IMulti;\r\nexport interface IProject extends IActivity {\r\n    type: \"project\";\r\n    transformations: ProjectTransformationType[];\r\n}\r\nexport function isProjectActivity(activity: IActivity): activity is IProject {\r\n    return activity.type === \"project\";\r\n}\r\nexport interface IMappings extends IActivity {\r\n    type: \"mappings\";\r\n    transformations: ProjectTransformationType[];\r\n}\r\nexport function isMappingsActivity(activity: IActivity): activity is IMappings {\r\n    return activity.type === \"mappings\";\r\n}\r\n//  GroupBy  ==================================================================\r\nexport type IAggregateType = \"min\" | \"max\" | \"sum\" | \"mean\" | \"variance\" | \"deviation\";\r\nexport interface IAggregate {\r\n    fieldID: string;\r\n    type: IAggregateType;\r\n    inFieldID: string;\r\n    baseCountFieldID?: string;\r\n}\r\n\r\nexport interface ICount {\r\n    fieldID: string;\r\n    type: \"count\";\r\n}\r\n\r\nexport type AggregateType = IAggregate | ICount;\r\n\r\nexport interface IGroupBy extends IActivity {\r\n    type: \"groupby\";\r\n    groupByIDs: string[];\r\n    aggregates: AggregateType[];\r\n}\r\nexport function isGroupByActivity(activity: IActivity): activity is IGroupBy {\r\n    return activity.type === \"groupby\";\r\n}\r\n\r\n//  Sort  =====================================================================\r\nexport interface ISortCondition {\r\n    fieldID: string;\r\n    descending: boolean;\r\n}\r\n\r\nexport interface ISort extends IActivity {\r\n    type: \"sort\";\r\n    conditions: ISortCondition[];\r\n}\r\nexport function isSortActivity(activity: IActivity): activity is ISort {\r\n    return activity.type === \"sort\";\r\n}\r\n\r\n//  Limit  ====================================================================\r\nexport interface ILimit extends IActivity {\r\n    type: \"limit\";\r\n    limit: number;\r\n}\r\nexport function isLimitActivity(activity: IActivity): activity is ILimit {\r\n    return activity.type === \"limit\";\r\n}\r\n\r\n//  Visualization  ============================================================\r\nexport interface IWidgetProperties {\r\n    __class: string;\r\n    [propID: string]: string | string[] | number | boolean | undefined | IWidgetProperties | IWidgetProperties[];\r\n}\r\n\r\nexport interface IWidget {\r\n    id: string;\r\n    chartType: string;\r\n    __class: string;\r\n    properties: IWidgetProperties;\r\n}\r\n\r\nexport type VisibilityType = \"normal\" | \"flyout\";\r\nexport const VisibilitySet: VisibilityType[] = [\"normal\", \"flyout\"];\r\n\r\nexport interface IVisualization extends IWidget {\r\n    title: string;\r\n    description?: string;\r\n    visibility: VisibilityType;\r\n    mappings: IMappings;\r\n}\r\n\r\n//  View  =====================================================================\r\nexport interface IView {\r\n    id: string;\r\n    datasource: IDatasourceRef;\r\n    activities: ActivityType[];\r\n    visualization: IVisualization;\r\n}\r\n\r\n//  DDL  ======================================================================\r\nexport interface IProperties {\r\n    [propID: string]: any;\r\n}\r\n\r\nexport interface Schema {\r\n    version: \"2.0.23\";\r\n    createdBy: {\r\n        name: string;\r\n        version: string;\r\n    };\r\n    datasources: DatasourceType[];\r\n    dataviews: IView[];\r\n    properties?: IProperties;\r\n    hipieProperties?: IProperties;\r\n\r\n    //  The following defs are only provided to assist the Java code generation (from the the generated schema)  ---\r\n    defs?: {\r\n        fieldTypes: {\r\n            number64: Number64;\r\n            range: Range;\r\n            dataset: Dataset;\r\n            fieldType: IFieldType;\r\n            fieldBoolean: IFieldBoolean;\r\n            fieldNumber: IFieldNumber;\r\n            fieldNumber64: IFieldNumber64\r\n            fieldString: IFieldString;\r\n            fieldRange: IFieldRange;\r\n            fieldDataset: IFieldDataset;\r\n            fieldObject: IFieldObject;\r\n            field: IField;\r\n        };\r\n        datasourceTypes: {\r\n            datasource: IDatasource;\r\n            logicalFile: ILogicalFile;\r\n            form: IForm;\r\n            databomb: IDatabomb;\r\n            wuresult: IWUResult;\r\n            hipieService: IHipieService;\r\n            roxieService: IRoxieService;\r\n        };\r\n        datasourceRefTypes: {\r\n            wuResultRef: IWUResultRef;\r\n            roxieServiceRef: IRoxieServiceRef;\r\n        };\r\n        activityTypes: {\r\n            filter: IFilter;\r\n            project: IProject;\r\n            groupby: IGroupBy;\r\n            sort: ISort;\r\n            limit: ILimit;\r\n            mappings: IMappings;\r\n        };\r\n        aggregateTypes: {\r\n            aggregate: IAggregate;\r\n            count: ICount;\r\n        };\r\n        transformationTypes: {\r\n            equals: IEquals;\r\n            calculated: ICalculated;\r\n            scale: IScale;\r\n            template: ITemplate;\r\n            map: IMap;\r\n            multi: IMulti;\r\n        };\r\n    };\r\n}\r\n","import * as DDL2 from \"./ddl/v2\";\r\n\r\nconst classMappings: any = {\r\n    c3chart_Bar: \"chart_Bar\",\r\n    c3chart_Column: \"chart_Column\",\r\n    c3chart_Pie: \"chart_Pie\",\r\n    c3chart_Area: \"chart_Area\",\r\n    c3chart_Line: \"chart_Line\",\r\n    amchart_Bar: \"chart_Bar\",\r\n    amchart_Column: \"chart_Column\",\r\n    amchart_Pie: \"chart_Pie\",\r\n    amchart_Area: \"chart_Area\",\r\n    amchart_Line: \"chart_Line\",\r\n    google_Bar: \"chart_Bar\",\r\n    google_Column: \"chart_Column\",\r\n    google_Pie: \"chart_Pie\",\r\n    google_Area: \"chart_Area\",\r\n    google_Line: \"chart_Line\",\r\n    other_Table: \"dgrid_Table\"\r\n};\r\nconst propertyMappings: any = {\r\n    xAxisLabelRotation: [\r\n        { name: \"xAxisOverlapMode\", transform: (n: any) => \"rotate\" },\r\n        { name: \"xAxisLabelRotation\", transform: (n: any) => n }\r\n    ],\r\n    tooltipLabelColor: {\r\n        name: \"tooltipLabelColor\"\r\n    },\r\n    tooltipSeriesColor: {\r\n        name: \"tooltipSeriesColor\"\r\n    },\r\n    tooltipValueColor: {\r\n        name: \"tooltipValueColor\"\r\n    },\r\n    tooltipValueFormat: {\r\n        name: \"tooltipValueFormat\"\r\n    },\r\n    timePattern: {\r\n        name: \"xAxisTypeTimePattern\"\r\n    },\r\n    smoothLines: {\r\n        name: \"interpolate\",\r\n        transform: (n: any) => {\r\n            if (n === false) return \"linear\";\r\n            return \"catmullRom\";\r\n        }\r\n    },\r\n    holePercent: {\r\n        name: \"innerRadius\"\r\n    },\r\n    flip: {\r\n        name: \"orientation\",\r\n        transform: (n: any) => n ? \"vertical\" : \"horizontal\"\r\n    },\r\n    bottomText: {\r\n        name: \"xAxisTitle\"\r\n    },\r\n    xAxisTypeTimePattern: {\r\n        name: \"xAxisTypeTimePattern\"\r\n    },\r\n    yAxisTypeTimePattern: {\r\n        name: \"yAxisTypeTimePattern\"\r\n    },\r\n    valueFormat: {\r\n        name: \"tooltipValueFormat\"\r\n    },\r\n    stacked: {\r\n        name: \"yAxisStacked\"\r\n    },\r\n    showYGrid: {\r\n        name: \"yAxisGuideLines\"\r\n    },\r\n    showXGrid: {\r\n        name: \"xAxisGuideLines\"\r\n    },\r\n    showValueLabel: {\r\n        name: \"showValue\"\r\n    },\r\n    low: {\r\n        name: \"yAxisDomainLow\"\r\n    },\r\n    high: {\r\n        name: \"yAxisDomainHigh\"\r\n    },\r\n    fillOpacity: {\r\n        name: \"interpolateFillOpacity\"\r\n    },\r\n    areaFillOpacity: {\r\n        name: \"interpolateFillOpacity\"\r\n    },\r\n    showToolbar: {\r\n        name: \"titleVisible\"\r\n    },\r\n    showCSV: {\r\n        name: \"downloadButtonVisible\"\r\n    }\r\n};\r\n\r\nfunction findKeyVal(object: any, key: any, val: any): any {\r\n    let value;\r\n\r\n    for (const k in object) {\r\n        if (k === key && object[k] === val) {\r\n            value = object;\r\n            break;\r\n        }\r\n        if (object[k] && typeof object[k] === \"object\") {\r\n            value = findKeyVal(object[k], key, val);\r\n            if (value !== undefined) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction apply_to_dataviews(ddl2: DDL2.Schema, dermObj: any) {\r\n\r\n    ddl2.dataviews.forEach(apply_to_dataview);\r\n\r\n    function apply_to_dataview(dv: any) {\r\n        const widgetId = dv.id;\r\n        const dermPanelObj: any = findKeyVal(dermObj, \"__id\", widgetId);\r\n        if (dermPanelObj) {\r\n            const dermPanelProps: any = dermPanelObj.__properties;\r\n            const dermWidgetObj: any = dermPanelObj.__properties.chart ? dermPanelObj.__properties.chart : dermPanelObj.__properties.widget;\r\n            const dermWidgetProps: any = dermWidgetObj.__properties;\r\n            apply_class_mapping(dermWidgetObj);\r\n            apply_panel_property_mapping(dermPanelProps, dermWidgetProps);\r\n            apply_widget_property_mapping(dermPanelProps, dermWidgetProps);\r\n            if (dv.visualization.properties.chartType) {\r\n                dv.visualization.properties.charttype = dv.visualization.properties.chartType;\r\n            }\r\n        } else {\r\n            console.warn(widgetId + \" not found in dermObj\");\r\n        }\r\n\r\n        function apply_class_mapping(dermWidgetObj: any) {\r\n            dv.visualization.__class = swap_with_supported_class(dermWidgetObj.__class);\r\n            dv.visualization.properties.__class = \"marshaller_VizChartPanel\";\r\n            if (!dv.visualization.properties.widget) dv.visualization.properties.widget = {};\r\n            dv.visualization.properties.widget.__class = dv.visualization.__class;\r\n\r\n            function swap_with_supported_class(_class: string): string {\r\n                return classMappings[_class] ? classMappings[_class] : _class;\r\n            }\r\n        }\r\n        function apply_panel_property_mapping(dermPanelProps: any, dermWidgetProps: any) {\r\n            dv.visualization.title = dermPanelProps.title || \"\";\r\n            dv.visualization.description = \"\";\r\n            dv.visualization.visibility = dv.visualization.visibility === \"flyout\" ? \"flyout\" : \"normal\";\r\n            dv.visualization.chartType = dv.visualization.__class.split(\"_\")[1];\r\n            for (const propName in dermPanelProps) {\r\n                if (typeof propertyMappings[propName] !== \"undefined\") {\r\n                    const newPropName = propertyMappings[propName].name;\r\n\r\n                    if (typeof propertyMappings[propName].transform === \"function\") {\r\n                        dv.visualization.properties[newPropName] = propertyMappings[propName].transform(dermPanelProps[propName]);\r\n                    } else {\r\n                        dv.visualization.properties[newPropName] = dermPanelProps[propName];\r\n                    }\r\n\r\n                }\r\n            }\r\n            if (dermWidgetProps && dermWidgetProps.showLegend && dv.visualization.properties) {\r\n                dv.visualization.properties.legendVisible = true;\r\n            }\r\n        }\r\n        function apply_widget_property_mapping(dermPanelProps: any, dermWidgetProps: any) {\r\n            dv.visualization.title = dv.visualization.title || dermWidgetProps.title || \"\";\r\n            dv.visualization.description = \"\"; // TODO - should this map to anything?\r\n            dv.visualization.visibility = dv.visualization.visibility === \"flyout\" ? \"flyout\" : \"normal\";\r\n            dv.visualization.chartType = dv.visualization.__class.split(\"_\")[1];\r\n            for (const propName in dermWidgetProps) {\r\n                if (typeof propertyMappings[propName] !== \"undefined\") {\r\n                    if (propertyMappings[propName] instanceof Array) {\r\n                        propertyMappings[propName].forEach((p: any) => {\r\n                            const newPropName = p.name;\r\n                            dv.visualization.properties.widget[newPropName] = p.transform(dermWidgetProps[propName]);\r\n                            if (typeof propertyMappings[propName].transform === \"function\") {\r\n                                dv.visualization.properties.widget[newPropName] = propertyMappings[propName].transform(dermWidgetProps[propName]);\r\n                            } else {\r\n                                dv.visualization.properties.widget[newPropName] = dermWidgetProps[propName];\r\n                            }\r\n                        });\r\n                    } else {\r\n                        const newPropName = propertyMappings[propName].name;\r\n                        dv.visualization.properties.widget[newPropName] = propertyMappings[propName].transform(dermWidgetProps[propName]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ntype CellPosition = {\r\n    id: string;\r\n    position: [number, number, number, number];\r\n};\r\n\r\ntype DDLProperties = {\r\n    layout: CellPosition[]\r\n};\r\n\r\nfunction apply_to_properties_layout(ddl2: DDL2.Schema, dermObj: any) {\r\n    const retVal: DDLProperties = {\r\n        layout: []\r\n    };\r\n    if (!dermObj || !dermObj.__properties) return;\r\n    dermObj.__properties.content.forEach((cell: any) => {\r\n        const cellPosition: CellPosition = {\r\n            // TODO - if \"id\" could be avoided then layouts could apply to any dashboard with the same number of widgets\r\n            id: cell.__properties.widget.__id,\r\n            position: [\r\n                cell.__properties.gridCol,\r\n                cell.__properties.gridRow,\r\n                cell.__properties.gridColSpan,\r\n                cell.__properties.gridRowSpan\r\n            ]\r\n        };\r\n        retVal.layout.push(cellPosition);\r\n    });\r\n    return retVal;\r\n}\r\n\r\nexport function upgrade(ddl2: DDL2.Schema, dermObj: any) {\r\n    apply_to_dataviews(ddl2, dermObj);\r\n    return apply_to_properties_layout(ddl2, dermObj);\r\n}\r\n","import { PKG_NAME, PKG_VERSION } from \"./__package__\";\r\nimport * as DDL1 from \"./ddl/v1\";\r\nimport * as DDL2 from \"./ddl/v2\";\r\nimport { upgrade as dermatologyUpgrade } from \"./dermatology\";\r\n\r\ninterface IDatasourceOutput {\r\n    datasource: DDL1.IAnyDatasource;\r\n    output: DDL1.IOutput;\r\n}\r\n\r\ninterface IDatasourceOutputFilter extends IDatasourceOutput {\r\n    filter: DDL1.IFilter;\r\n}\r\n\r\nconst UPGRADE_HEX_CHAR: boolean = false;\r\nfunction faCharFix(faChar: any): string | undefined {\r\n    if (UPGRADE_HEX_CHAR && typeof faChar === \"string\") {\r\n        return String.fromCharCode(parseInt(faChar));\r\n    }\r\n    return faChar;\r\n}\r\n\r\nclass DDLUpgrade {\r\n    _ddl: DDL1.IDDL;\r\n    _baseUrl: string;\r\n    _wuid?: string;\r\n    _toLowerCase: boolean;\r\n\r\n    _datasources: { [id: string]: DDL1.IAnyDatasource } = {};\r\n    _datasourceUpdates: { [id: string]: { id: string, output?: string } } = {};\r\n    _visualizations: { [id: string]: DDL1.IAnyVisualization } = {};\r\n\r\n    _ddl2Datasources: { [id: string]: DDL2.DatasourceType } = {};\r\n    _ddl2DatasourceFields: { [dsid: string]: { [outputID: string]: { [fieldID: string]: DDL2.IField } } } = {};\r\n\r\n    _ddl2Dataviews: { [id: string]: DDL2.IView } = {};\r\n    _ddl2DataviewActivities: {\r\n        [viewID: string]: {\r\n            project: DDL2.IProject,\r\n            filters: DDL2.IFilter,\r\n            sort: DDL2.ISort,\r\n            groupBy: DDL2.IGroupBy,\r\n            limit: DDL2.ILimit,\r\n            mappings: DDL2.IMappings\r\n        }\r\n    } = {};\r\n\r\n    constructor(ddl: DDL1.IDDL, baseUrl: string = \"http://localhost:8010\", wuid: string = \"WUID\", toLowerCase = true) {\r\n        this._ddl = ddl;\r\n        this._baseUrl = baseUrl;\r\n        this._wuid = wuid;\r\n        this._toLowerCase = toLowerCase;\r\n\r\n        this.indexDDL();\r\n        this.readDDL();\r\n    }\r\n\r\n    toLowerCase(s: string): string {\r\n        return this._toLowerCase ? s.toLowerCase() : s;\r\n    }\r\n\r\n    isVizDatasourceRoxie(viz: DDL1.IAnyVisualization): boolean {\r\n        if ((viz as any).source) {\r\n            const ds = this._datasources[(viz as any).source.id];\r\n            if (DDL1.isHipieDatasource(ds)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getDatasourceOutputs(dsID: string, vizID: string): IDatasourceOutput[] {\r\n        const retVal: IDatasourceOutput[] = [];\r\n        const datasource = this._datasources[dsID];\r\n        for (const output of datasource.outputs) {\r\n            if (output.notify) {\r\n                for (const notify of output.notify) {\r\n                    if (notify === vizID) {\r\n                        retVal.push({\r\n                            datasource,\r\n                            output\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    getDatasourceFilters(dsID: string, vizID: string): { [id: string]: IDatasourceOutputFilter } {\r\n        const retVal: { [id: string]: IDatasourceOutputFilter } = {};\r\n        for (const dsOut of this.getDatasourceOutputs(dsID, vizID)) {\r\n            if (dsOut.output.filter) {\r\n                for (const filter of dsOut.output.filter) {\r\n                    retVal[filter.fieldid] = {\r\n                        datasource: dsOut.datasource,\r\n                        output: dsOut.output,\r\n                        filter\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    indexDDL() {\r\n        for (const dash of this._ddl.dashboards) {\r\n            for (const viz of dash.visualizations) {\r\n                this._visualizations[viz.id] = viz;\r\n            }\r\n        }\r\n\r\n        for (const ds of this._ddl.datasources) {\r\n            this._datasources[ds.id] = ds;\r\n            for (const output of ds.outputs) {\r\n                if (output.notify) {\r\n                    for (const notify of output.notify) {\r\n                        this._datasourceUpdates[notify] = {\r\n                            id: ds.id,\r\n                            output: output.from || output.id\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    readDDL() {\r\n        for (const ds of this._ddl.datasources) {\r\n            if (DDL1.isWorkunitDatasource(ds)) {\r\n                const ddl2DS: DDL2.IWUResult = {\r\n                    type: \"wuresult\",\r\n                    id: ds.id,\r\n                    url: this._baseUrl,\r\n                    wuid: this._wuid!,\r\n                    outputs: {}\r\n                };\r\n                for (const output of ds.outputs) {\r\n                    this.output2output(output, ddl2DS.outputs);\r\n                }\r\n                this._ddl2Datasources[ds.id] = ddl2DS;\r\n            } else if (DDL1.isDatabombDatasource(ds)) {\r\n            } else {\r\n                const urlParts = ds.URL!.split(\"/WsEcl/submit/query/\");\r\n                const hostParts = urlParts[0];\r\n                const roxieParts = urlParts[1].split(\"/\");\r\n                const ddl2DS: DDL2.IHipieService = {\r\n                    type: \"hipie\",\r\n                    id: ds.id,\r\n                    url: hostParts,\r\n                    querySet: roxieParts[0],\r\n                    queryID: roxieParts[1],\r\n                    inputs: [],\r\n                    outputs: {}\r\n                };\r\n                for (const output of ds.outputs) {\r\n                    this.output2output(output, ddl2DS.outputs);\r\n                }\r\n                this._ddl2Datasources[ds.id] = ddl2DS;\r\n            }\r\n        }\r\n        for (const dash of this._ddl.dashboards) {\r\n            for (const viz of dash.visualizations) {\r\n                if (viz.type === \"FORM\") {\r\n                    this._ddl2Datasources[viz.id] = {\r\n                        type: \"form\",\r\n                        id: viz.id,\r\n                        fields: this.formFields2field(viz.fields)\r\n                    };\r\n                    this._datasourceUpdates[viz.id] = { id: viz.id };\r\n                } else if (viz.type === \"SLIDER\") {\r\n                    this._ddl2Datasources[viz.id] = {\r\n                        type: \"form\",\r\n                        id: viz.id,\r\n                        fields: this.formFields2field(viz.fields, true)\r\n                    };\r\n                    this._datasourceUpdates[viz.id] = { id: viz.id };\r\n                }\r\n\r\n                this._ddl2Dataviews[viz.id] = this.anyViz2view(viz);\r\n            }\r\n        }\r\n\r\n        this.readGroupBy();\r\n        this.readFilters();\r\n        this.readSort();\r\n        this.readMappings();\r\n    }\r\n\r\n    readGroupBy() {\r\n        for (const dash of this._ddl.dashboards) {\r\n            for (const viz of dash.visualizations) {\r\n                if (viz.fields) {\r\n                    const projectTransformations: DDL2.ProjectTransformationType[] = [];\r\n                    const groupByColumns: string[] = [];\r\n                    const aggrFields: DDL2.IAggregate[] = [];\r\n                    for (const field of viz.fields) {\r\n                        if (field.properties && field.properties.function) {\r\n                            switch (field.properties.function) {\r\n                                case \"SUM\":\r\n                                case \"MIN\":\r\n                                case \"MAX\":\r\n                                    aggrFields.push({\r\n                                        type: this.func2aggr(field.properties.function),\r\n                                        inFieldID: this.toLowerCase(field.properties.params!.param1),\r\n                                        fieldID: this.toLowerCase(field.id)\r\n                                    } as DDL2.IAggregate);\r\n                                    break;\r\n                                case \"AVE\":\r\n                                    aggrFields.push({\r\n                                        type: this.func2aggr(field.properties.function),\r\n                                        inFieldID: this.toLowerCase(field.properties.params!.param1),\r\n                                        baseCountFieldID: field.properties.params!.param2 ? this.toLowerCase(field.properties.params!.param2) : undefined,\r\n                                        fieldID: this.toLowerCase(field.id)\r\n                                    } as DDL2.IAggregate);\r\n                                    break;\r\n                                case \"SCALE\":\r\n                                    if (typeof field.properties.params!.param1 === \"object\") {\r\n                                        const props: any = field.properties.params!.param1;\r\n                                        switch (props.function) {\r\n                                            case \"SUM\":\r\n                                            case \"MIN\":\r\n                                            case \"MAX\":\r\n                                                aggrFields.push({\r\n                                                    type: this.func2aggr(props.function),\r\n                                                    inFieldID: this.toLowerCase(props.params.param1),\r\n                                                    fieldID: this.toLowerCase(field.id)\r\n                                                });\r\n                                                break;\r\n                                        }\r\n                                    }\r\n                                    projectTransformations.push({\r\n                                        type: \"scale\",\r\n                                        sourceFieldID: this.toLowerCase(field.id),\r\n                                        fieldID: this.toLowerCase(field.id),\r\n                                        factor: +field.properties.params!.param2\r\n                                    });\r\n                                    break;\r\n                                default:\r\n                                    groupByColumns.push(this.toLowerCase(field.id));\r\n                                    throw new Error(`Unhandled field function: ${field.properties.function}`);\r\n                            }\r\n                        } else {\r\n                            groupByColumns.push(this.toLowerCase(field.id));\r\n                        }\r\n                    }\r\n                    if (projectTransformations.length) {\r\n                        this._ddl2DataviewActivities[viz.id].project.transformations = projectTransformations;\r\n                    }\r\n                    if (aggrFields.length) {\r\n                        this._ddl2DataviewActivities[viz.id].groupBy.groupByIDs = [...groupByColumns];\r\n                        this._ddl2DataviewActivities[viz.id].groupBy.aggregates = aggrFields;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    func2aggr(func: DDL1.VisualizationFieldFuncitonType): DDL2.IAggregateType {\r\n        switch (func) {\r\n            case \"SUM\":\r\n                return \"sum\";\r\n            case \"AVE\":\r\n                return \"mean\";\r\n            case \"MIN\":\r\n                return \"min\";\r\n            case \"MAX\":\r\n                return \"max\";\r\n        }\r\n        throw new Error(`Unknown DDL1 Function Type:  ${func}`);\r\n    }\r\n\r\n    readMappings() {\r\n        for (const dash of this._ddl.dashboards) {\r\n            for (const viz of dash.visualizations) {\r\n                if (DDL1.isFormVisualization(viz)) {\r\n                } else if (DDL1.isPieVisualization(viz)) {\r\n                    this.readPieMappings(viz);\r\n                } else if (DDL1.isChoroVisualization(viz)) {\r\n                    this.readChoroMappings(viz);\r\n                } else if (DDL1.isLineVisualization(viz)) {\r\n                    this.readLineMappings(viz);\r\n                } else if (DDL1.isTableVisualization(viz)) {\r\n                    this.readTableMappings(viz);\r\n                } else if (DDL1.isGraphVisualization(viz)) {\r\n                    this.readGraphMappings(viz);\r\n                } else if (DDL1.isSliderVisualization(viz)) {\r\n                    this.readSliderMappings(viz);\r\n                } else {\r\n                    throw new Error(`Unkown DDL1 mapping type:  ${viz.type}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    readPieMappings(viz: DDL1.IPieVisualization) {\r\n        const mappings = this._ddl2DataviewActivities[viz.id].mappings;\r\n        mappings.transformations.push({\r\n            fieldID: \"label\",\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(viz.source.mappings.label)\r\n        });\r\n        mappings.transformations.push({\r\n            fieldID: \"weight\",\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(viz.source.mappings.weight[0])\r\n        });\r\n    }\r\n\r\n    readChoroMappings(viz: DDL1.IChoroVisualization) {\r\n        const mappings = this._ddl2DataviewActivities[viz.id].mappings;\r\n        mappings.transformations.push({\r\n            fieldID: \"label\",\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(this.anyChoroMapping2label(viz.source.mappings))\r\n        });\r\n        mappings.transformations.push({\r\n            fieldID: \"weight\",\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(viz.source.mappings.weight[0])\r\n        });\r\n    }\r\n\r\n    anyChoroMapping2label(mapping: any) {\r\n        return mapping.state || mapping.county || mapping.geohash;\r\n    }\r\n\r\n    readLineMappings(viz: DDL1.ILineVisualization) {\r\n        const mappings = this._ddl2DataviewActivities[viz.id].mappings;\r\n        mappings.transformations.push({\r\n            fieldID: viz.source.mappings.x[0],\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(viz.source.mappings.x[0])\r\n        });\r\n        for (let i = 0; i < viz.source.mappings.y.length; ++i) {\r\n            mappings.transformations.push({\r\n                fieldID: viz.source.mappings.y[i],\r\n                type: \"=\",\r\n                sourceFieldID: this.toLowerCase(viz.source.mappings.y[i])\r\n            });\r\n        }\r\n    }\r\n\r\n    readTableMappings(viz: DDL1.ITableVisualization) {\r\n        const mappings = this._ddl2DataviewActivities[viz.id].mappings;\r\n        for (let i = 0; i < viz.label.length; ++i) {\r\n            mappings.transformations.push({\r\n                fieldID: viz.label[i],\r\n                type: \"=\",\r\n                sourceFieldID: this.toLowerCase(viz.source.mappings.value[i])\r\n            });\r\n        }\r\n    }\r\n\r\n    readGraphEnums(valueMappings?: DDL1.IValueMappings, annotation: boolean = false): DDL2.IMapMapping[] {\r\n        const retVal: DDL2.IMapMapping[] = [];\r\n        if (valueMappings) {\r\n            for (const value in valueMappings) {\r\n                const newValue: { [key: string]: string | number | boolean | undefined } = {};\r\n                for (const key in valueMappings[value]) {\r\n                    if (key === \"faChar\") {\r\n                        newValue[key] = faCharFix(valueMappings[value][key]);\r\n                    } else if (annotation && key.indexOf(\"icon_\") === 0) {\r\n                        console.log(\"Deprecated flag property:  \" + key);\r\n                        newValue[key.split(\"icon_\")[1]] = valueMappings[value][key];\r\n                    } else {\r\n                        newValue[key] = valueMappings[value][key];\r\n                    }\r\n                }\r\n                //  remove v1.x \"0\" annotations as they equated to \"nothing\"  ---\r\n                if (!annotation || value !== \"0\") {\r\n                    retVal.push({\r\n                        value,\r\n                        newValue\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    readGraphMappings(viz: DDL1.IGraphVisualization) {\r\n        const mappings = this._ddl2DataviewActivities[viz.id].mappings;\r\n        mappings.transformations.push({\r\n            fieldID: \"uid\",\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(viz.source.mappings.uid)\r\n        });\r\n        mappings.transformations.push({\r\n            fieldID: \"label\",\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(viz.source.mappings.label)\r\n        });\r\n        if (viz.icon.fieldid) {\r\n            mappings.transformations.push({\r\n                fieldID: \"icon\",\r\n                type: \"map\",\r\n                sourceFieldID: this.toLowerCase(viz.icon.fieldid),\r\n                default: { fachar: faCharFix(viz.icon.faChar) },\r\n                mappings: this.readGraphEnums(viz.icon.valuemappings)\r\n            });\r\n        }\r\n        let idx = 0;\r\n        if (viz.flag) {\r\n            for (const flag of viz.flag) {\r\n                if (flag.fieldid) {\r\n                    mappings.transformations.push({\r\n                        fieldID: `annotation_${idx++}`,\r\n                        type: \"map\",\r\n                        sourceFieldID: this.toLowerCase(flag.fieldid),\r\n                        default: {},\r\n                        mappings: this.readGraphEnums(flag.valuemappings, true)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        mappings.transformations.push({\r\n            fieldID: \"links\",\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(viz.source.link.childfile),\r\n            transformations: [{\r\n                fieldID: \"uid\",\r\n                type: \"=\",\r\n                sourceFieldID: this.toLowerCase(viz.source.link.mappings.uid)\r\n            }]\r\n        });\r\n    }\r\n\r\n    readSliderMappings(viz: DDL1.ISliderVisualization) {\r\n        const mappings = this._ddl2DataviewActivities[viz.id].mappings;\r\n        mappings.transformations.push({\r\n            fieldID: \"label\",\r\n            type: \"=\",\r\n            sourceFieldID: this.toLowerCase(viz.source.mappings.label)\r\n        });\r\n    }\r\n\r\n    readFilters() {\r\n        for (const dash of this._ddl.dashboards) {\r\n            for (const viz of dash.visualizations) {\r\n                if (viz.events) {\r\n                    for (const eventID in viz.events) {\r\n                        const event = viz.events[eventID];\r\n                        for (const update of event.updates) {\r\n                            const otherViz = this._ddl2Dataviews[update.visualization];\r\n                            const dsFilters = this.getDatasourceFilters(update.datasource, otherViz.id);\r\n                            if (update.mappings) {\r\n                                if (DDL2.isRoxieServiceRef(otherViz.datasource)) {\r\n                                    for (const key in update.mappings) {\r\n                                        otherViz.datasource.request.push({\r\n                                            source: viz.id,\r\n                                            remoteFieldID: this.toLowerCase(key),\r\n                                            localFieldID: this.toLowerCase(update.mappings[key])\r\n                                        } as DDL2.IRequestField);\r\n                                    }\r\n                                } else {\r\n                                    const condition: DDL2.IFilterCondition = {\r\n                                        viewID: viz.id,\r\n                                        mappings: []\r\n                                    };\r\n                                    for (const key in update.mappings) {\r\n                                        const mapping = update.mappings[key];\r\n                                        const dsFilter = mapping ? dsFilters[mapping].filter : undefined;\r\n                                        if (!dsFilter) {\r\n                                            console.log(\"Select Mapping \" + mapping + \" in viz \" + viz.id + \" not found in filters for \" + otherViz.id);\r\n                                        } else {\r\n                                            condition.mappings.push({\r\n                                                remoteFieldID: this.toLowerCase(key),\r\n                                                localFieldID: this.toLowerCase(update.mappings[key]),\r\n                                                condition: this.rule2condition(dsFilter.rule),\r\n                                                nullable: dsFilter.nullable\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    this._ddl2DataviewActivities[otherViz.id].filters.conditions.push(condition);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    rule2condition(_: DDL1.IFilterRule): DDL2.IMappingConditionType {\r\n        switch (_) {\r\n            case \"set\":\r\n                return \"in\";\r\n            case \"notequals\":\r\n                return \"!=\";\r\n        }\r\n        return _;\r\n    }\r\n\r\n    readSort() {\r\n        for (const dash of this._ddl.dashboards) {\r\n            for (const viz of dash.visualizations) {\r\n                if ((viz as any).source) {\r\n                    if ((viz as any).source.sort) {\r\n                        const vizSort = this._ddl2DataviewActivities[viz.id].sort;\r\n                        vizSort.conditions = ((viz as any).source.sort as string[]).map(s => {\r\n                            if (s.indexOf(\"-\") === 0) {\r\n                                return {\r\n                                    fieldID: this.toLowerCase(s.substr(1)),\r\n                                    descending: true\r\n                                } as DDL2.ISortCondition;\r\n                            }\r\n                            return {\r\n                                fieldID: this.toLowerCase(s),\r\n                                descending: false\r\n                            } as DDL2.ISortCondition;\r\n                        });\r\n                    }\r\n                    if ((viz as any).source.first) {\r\n                        const vizLimit = this._ddl2DataviewActivities[viz.id].limit;\r\n                        vizLimit.limit = +(viz as any).source.first;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    anyViz2view(viz: DDL1.IAnyVisualization): DDL2.IView {\r\n        const project: DDL2.IProject = {\r\n            type: \"project\",\r\n            transformations: []\r\n        };\r\n        const filters: DDL2.IFilter = {\r\n            type: \"filter\",\r\n            conditions: []\r\n        };\r\n        const groupBy: DDL2.IGroupBy = {\r\n            type: \"groupby\",\r\n            groupByIDs: [],\r\n            aggregates: []\r\n        };\r\n        const sort: DDL2.ISort = {\r\n            type: \"sort\",\r\n            conditions: []\r\n        };\r\n        const limit: DDL2.ILimit = {\r\n            type: \"limit\",\r\n            limit: 0\r\n        };\r\n        const mappings: DDL2.IMappings = {\r\n            type: \"mappings\",\r\n            transformations: []\r\n        };\r\n        this._ddl2DataviewActivities[viz.id] = {\r\n            project,\r\n            filters,\r\n            sort,\r\n            groupBy,\r\n            limit,\r\n            mappings\r\n        };\r\n        const datasourceRef: DDL2.IDatasourceBaseRef | DDL2.IRoxieServiceRef = this.isVizDatasourceRoxie(viz) ? {\r\n            id: this._datasourceUpdates[viz.id].id,\r\n            request: [],\r\n            output: this._datasourceUpdates[viz.id].output\r\n        } : {\r\n                id: this._datasourceUpdates[viz.id].id,\r\n                output: this._datasourceUpdates[viz.id].output\r\n            };\r\n        return {\r\n            id: viz.id,\r\n            datasource: datasourceRef,\r\n            activities: [\r\n                project,\r\n                filters,\r\n                sort,\r\n                groupBy,\r\n                limit\r\n            ],\r\n            visualization: {\r\n                id: viz.id,\r\n                title: viz.title || \"\",\r\n                description: \"\",\r\n                visibility: viz.properties && viz.properties.flyout === true ? \"flyout\" : \"normal\",\r\n                ...this.type2chartType(viz.type),\r\n                mappings,\r\n                properties: (viz.properties || {}) as DDL2.IWidgetProperties\r\n            }\r\n        };\r\n    }\r\n\r\n    type2chartType(chartType: DDL1.VisualizationType): { chartType: string, __class: string } {\r\n        switch (chartType) {\r\n            case \"LINE\":\r\n                return { chartType: \"Line\", __class: \"chart_Line\" };\r\n            case \"BUBBLE\":\r\n                return { chartType: \"Bubble\", __class: \"chart_Bubble\" };\r\n            case \"PIE\":\r\n                return { chartType: \"Pie\", __class: \"chart_Pie\" };\r\n            case \"BAR\":\r\n                return { chartType: \"Column\", __class: \"chart_Column\" };\r\n            case \"FORM\":\r\n                return { chartType: \"FieldForm\", __class: \"form_FieldForm\" };\r\n            case \"WORD_CLOUD\":\r\n                return { chartType: \"WordCloud\", __class: \"chart_WordCloud\" };\r\n            case \"CHORO\":\r\n                return { chartType: \"ChoroplethStates\", __class: \"map_ChoroplethStates\" };\r\n            case \"SUMMARY\":\r\n                return { chartType: \"Summary\", __class: \"chart_Summary\" };\r\n            case \"SLIDER\":\r\n                return { chartType: \"FieldForm\", __class: \"form_FieldForm\" };\r\n            case \"HEAT_MAP\":\r\n                return { chartType: \"HeatMap\", __class: \"other_HeatMap\" };\r\n            case \"2DCHART\":\r\n                return { chartType: \"Column\", __class: \"chart_Column\" };\r\n            case \"GRAPH\":\r\n                return { chartType: \"AdjacencyGraph\", __class: \"graph_AdjacencyGraph\" };\r\n            case \"TABLE\":\r\n            default:\r\n                return { chartType: \"Table\", __class: \"dgrid_Table\" };\r\n        }\r\n    }\r\n\r\n    formFields2field(fields?: DDL1.IVisualizationField[], slider: boolean = false): DDL2.IField[] {\r\n        if (!fields) return [];\r\n        return fields.map(field => {\r\n            switch (field.properties.type) {\r\n                case \"range\":\r\n                    return {\r\n                        type: \"range\",\r\n                        id: field.id,\r\n                        default: (field.properties.default ? field.properties.default as DDL2.Range : undefined)\r\n                    };\r\n                case \"dataset\":\r\n                    return {\r\n                        type: \"dataset\",\r\n                        id: field.id,\r\n                        default: [],\r\n                        children: []\r\n                    };\r\n                default:\r\n                    return {\r\n                        type: this.formFieldType2fieldType(field.properties.datatype, slider),\r\n                        id: field.id,\r\n                        default: field.properties.default ? field.properties.default[0] : undefined\r\n                    };\r\n            }\r\n        });\r\n    }\r\n\r\n    formFieldType2fieldType(fieldType: DDL1.VisualizationFieldType, slider: boolean): \"string\" | \"number\" | \"boolean\" {\r\n        switch (fieldType) {\r\n            case \"bool\":\r\n            case \"boolean\":\r\n                return \"boolean\";\r\n            case \"integer\":\r\n            case \"unsigned\":\r\n            case \"float\":\r\n            case \"double\":\r\n            case \"real\":\r\n                return \"number\";\r\n            case \"string\":\r\n                return \"string\";\r\n            default:\r\n                return slider ? \"number\" : \"string\";\r\n        }\r\n    }\r\n\r\n    output2output(output: DDL1.IOutput, target: DDL2.OutputDict) {\r\n        target[output.from || output.id] = {\r\n            fields: this.filters2fields(output.filter)\r\n        };\r\n    }\r\n\r\n    filters2fields(filters?: DDL1.IFilter[]): DDL2.IField[] {\r\n        if (!filters) return [];\r\n        return filters.filter(filter => {\r\n            const idParts = filter.fieldid.split(\"-\");\r\n            return idParts.length === 1 || idParts[1] === \"range\";\r\n        }).map(filter => {\r\n            const idParts = filter.fieldid.split(\"-\");\r\n            const retVal: DDL2.IFieldString = {\r\n                type: \"string\",\r\n                id: idParts[0]\r\n            };\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    getVizField(vizID: string, fieldID: string): DDL2.IField {\r\n        return {\r\n            type: \"string\",\r\n            id: \"\",\r\n            default: \"\"\r\n        };\r\n    }\r\n\r\n    writeDatasources(): DDL2.DatasourceType[] {\r\n        const retVal: DDL2.DatasourceType[] = [];\r\n        for (const id in this._ddl2Datasources) {\r\n            retVal.push(this._ddl2Datasources[id]);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    writeDataviews(): DDL2.IView[] {\r\n        const retVal: DDL2.IView[] = [];\r\n        for (const id in this._ddl2Dataviews) {\r\n            retVal.push(this._ddl2Dataviews[id]);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    writeProperties(): DDL2.IProperties | undefined {\r\n        return {\r\n            //  TODO\r\n        };\r\n    }\r\n\r\n    write(): DDL2.Schema {\r\n        return {\r\n            version: \"2.0.23\",\r\n            createdBy: {\r\n                name: PKG_NAME,\r\n                version: PKG_VERSION\r\n            },\r\n            datasources: this.writeDatasources(),\r\n            dataviews: this.writeDataviews(),\r\n            properties: this.writeProperties()\r\n        };\r\n    }\r\n}\r\n\r\nexport function upgrade(ddl: DDL1.IDDL, baseUrl?: string, wuid?: string, toLowerCase: boolean = true, dermatologyJson = {}): DDL2.Schema {\r\n    const ddlUp = new DDLUpgrade(ddl, baseUrl, wuid, toLowerCase);\r\n    const retVal = ddlUp.write();\r\n    retVal.properties = dermatologyUpgrade(retVal, dermatologyJson);\r\n    return retVal;\r\n}\r\n","import * as fs from \"fs\";\r\n\r\n// @ts-ignore\r\nimport * as ddl2Schema from \"../schema/v2.json\";\r\nimport { upgrade } from \"./upgrade\";\r\n\r\nconst args = process.argv.slice(2);\r\n\r\nswitch (args[0]) {\r\n    case \"--echo\":\r\n        process.stdout.write(args[1]);\r\n        break;\r\n    case \"--schema\":\r\n        process.stdout.write(JSON.stringify(ddl2Schema));\r\n        break;\r\n    case \"--upgrade\":\r\n    case \"--upgradeNoLower\":\r\n        const srcPath = args[1];\r\n        const destPath = args[2];\r\n        const baseUrl = args[3];\r\n        const wuid = args[4];\r\n        const layoutPath = args[5];\r\n        if (srcPath && destPath && srcPath !== destPath) {\r\n            let layoutJson = {};\r\n            if (layoutPath) {\r\n                try {\r\n                    layoutJson = JSON.parse(fs.readFileSync(layoutPath).toString());\r\n                } catch (e) {\r\n                    console.error(e);\r\n                }\r\n            }\r\n            fs.readFile(srcPath, \"utf8\", function (err, data) {\r\n                if (err) throw err;\r\n                const ddl2 = upgrade(\r\n                    JSON.parse(data),\r\n                    baseUrl || \"http://localhost:8010\",\r\n                    wuid || \"WUID\",\r\n                    args[0] === \"--upgrade\",\r\n                    layoutJson\r\n                );\r\n                fs.writeFile(destPath, JSON.stringify(ddl2), function (err) {\r\n                    if (err) throw err;\r\n                    console.log(\"complete\");\r\n                });\r\n            });\r\n        }\r\n        break;\r\n    case \"--help\":\r\n        break;\r\n    default:\r\n        process.stdout.write(`\r\nUsage:  <command>\r\n\r\nwhere <command> is one of:\r\n    --schema:  output DDL2 schmea.\r\n    --upgrade ddl1 [baseUrl wuid [layout]]:  updgrade ddl and layout version 1 to ddl version 2.\r\n    --upgradeNoLower ddl1 [baseUrl wuid [layout]]:  updgrade ddl and layout version 1 to ddl version 2 without changing field IDs upper/lower casing.\r\n    --help:  this message.\r\n`);\r\n}\r\n"],"names":["DDL1.isHipieDatasource","DDL1.isWorkunitDatasource","DDL1.isDatabombDatasource","DDL1.isFormVisualization","DDL1.isPieVisualization","DDL1.isChoroVisualization","DDL1.isLineVisualization","DDL1.isTableVisualization","DDL1.isGraphVisualization","DDL1.isSliderVisualization","DDL2.isRoxieServiceRef","upgrade","dermatologyUpgrade","fs.readFileSync","fs.readFile","fs.writeFile"],"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"}