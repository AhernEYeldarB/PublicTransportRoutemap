import { HTMLWidget, ISize, Widget } from "@hpcc-js/common";
import "../src/Modal.css";
export declare class Modal extends HTMLWidget {
    protected _widget: Widget;
    protected _relativeTarget: HTMLElement;
    protected _fade: any;
    protected _modal: any;
    protected _modalHeader: any;
    protected _modalBody: any;
    protected _modalHeaderAnnotations: any;
    protected _modalHeaderCloseButton: any;
    _close: () => void;
    constructor();
    closeModal(): void;
    getRelativeTarget(): any;
    setModalSize(): ISize;
    setFadePosition(rect: any): void;
    setModalPosition(rect: any): void;
    resize(size?: any): this;
    enter(domNode: any, element: any): void;
    update(domNode: any, element: any): void;
    exit(domNode: any, element: any): void;
    formattedTitle(): string;
}
export interface Modal {
    show(): boolean;
    show(_: boolean): this;
    showFade(): boolean;
    showFade(_: boolean): this;
    enableClickFadeToClose(): boolean;
    enableClickFadeToClose(_: boolean): this;
    title(): string;
    title(_: string): this;
    titleFontSize(): number;
    titleFontSize(_: number): this;
    titleFontColor(): string;
    titleFontColor(_: string): this;
    minWidth(): string;
    minWidth(_: string): this;
    minHeight(): string;
    minHeight(_: string): this;
    maxWidth(): string;
    maxWidth(_: string): this;
    maxHeight(): string;
    maxHeight(_: string): this;
    fixedWidth(): string;
    fixedWidth(_: string): this;
    fixedHeight(): string;
    fixedHeight(_: string): this;
    fixedTop(): string;
    fixedTop(_: string): this;
    fixedLeft(): string;
    fixedLeft(_: string): this;
    relativeTargetId(): string;
    relativeTargetId(_: string): this;
    widget(): Widget;
    widget(_: Widget): this;
    overflowX(): "hidden" | "scroll";
    overflowX(_: "hidden" | "scroll"): this;
    overflowY(): "hidden" | "scroll";
    overflowY(_: "hidden" | "scroll"): this;
}
//# sourceMappingURL=Modal.d.ts.map