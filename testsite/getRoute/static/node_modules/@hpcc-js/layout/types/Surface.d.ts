import { HTMLWidget, Widget } from "@hpcc-js/common";
import "../src/Surface.css";
export declare class Surface extends HTMLWidget {
    _surfaceButtons: any;
    constructor();
    widgetSize(titleDiv: any, widgetDiv: any): {
        width: number;
        height: number;
    };
    enter(domNode: any, element: any): void;
    update(domNode: any, element2: any): void;
    exit(domNode: any, element: any): void;
    title: {
        (): string;
        (_: string): Surface;
    };
    altText: {
        (): string;
        (_: string): Surface;
    };
    altText_exists: () => boolean;
    surfaceTitlePadding: {
        (): number;
        (_: number): Surface;
    };
    surfaceTitlePadding_exists: () => boolean;
    surfaceTitleFontSize: {
        (): number;
        (_: number): Surface;
    };
    surfaceTitleFontSize_exists: () => boolean;
    surfaceTitleFontColor: {
        (): string;
        (_: string): Surface;
    };
    surfaceTitleFontFamily: {
        (): string;
        (_: string): Surface;
    };
    surfaceTitleFontBold: {
        (): boolean;
        (_: boolean): Surface;
    };
    surfaceTitleBackgroundColor: {
        (): string;
        (_: string): Surface;
    };
    surfaceTitleAlignment: {
        (): string;
        (_: string): Surface;
    };
    surfaceShadow: {
        (): boolean;
        (_: boolean): Surface;
    };
    surfacePadding: {
        (): string;
        (_: string): Surface;
    };
    surfacePadding_exists: () => boolean;
    surfaceBackgroundColor: {
        (): string;
        (_: string): Surface;
    };
    surfaceBorderWidth: {
        (): number;
        (_: number): Surface;
    };
    surfaceBorderWidth_exists: () => boolean;
    surfaceBorderColor: {
        (): string;
        (_: string): Surface;
    };
    surfaceBorderRadius: {
        (): number;
        (_: number): Surface;
    };
    surfaceBorderRadius_exists: () => boolean;
    buttonAnnotations: {
        (): any[];
        (_: any[]): Surface;
    };
    widget: {
        (): Widget;
        (_: Widget): Surface;
    };
    click(obj: any): void;
}
//# sourceMappingURL=Surface.d.ts.map