import { HTMLWidget } from "@hpcc-js/common";
import "../src/FlexGrid.css";
export declare class FlexGrid extends HTMLWidget {
    constructor();
    enter(domNode: any, element: any): void;
    update(domNode: any, element: any): void;
    exit(domNode: any, element: any): void;
    updateFlexParent(element: any): void;
}
export interface FlexGrid {
    widgets(): any;
    widgets(_: any): this;
    orientation(): "horizontal" | "vertical";
    orientation(_: "horizontal" | "vertical"): this;
    flexWrap(): "nowrap" | "wrap" | "wrap-reverse";
    flexWrap(_: "nowrap" | "wrap" | "wrap-reverse"): this;
    itemMinHeight(): number;
    itemMinHeight(_: number): this;
    itemMinWidth(): number;
    itemMinWidth(_: number): this;
    alignItems(): "flex-start" | "center" | "flex-end" | "stretch";
    alignItems(_: "flex-start" | "center" | "flex-end" | "stretch"): this;
    alignContent(): "flex-start" | "center" | "flex-end" | "stretch" | "space-between" | "space-around";
    alignContent(_: "flex-start" | "center" | "flex-end" | "stretch" | "space-between" | "space-around"): this;
    itemBorderColor(): string;
    itemBorderColor(_: string): this;
    borderWidth(): number;
    borderWidth(_: number): this;
    flexGrow(): number;
    flexGrow(_: number): this;
    widgetsFlexGrow(): number[];
    widgetsFlexGrow(_: number[]): this;
    flexBasis(): string;
    flexBasis(_: string): this;
    widgetsFlexBasis(): string[];
    widgetsFlexBasis(_: string[]): this;
    disableScroll(): boolean;
    disableScroll(_: boolean): this;
    forceXScroll(): boolean;
    forceXScroll(_: boolean): this;
    forceYScroll(): boolean;
    forceYScroll(_: boolean): this;
}
//# sourceMappingURL=FlexGrid.d.ts.map