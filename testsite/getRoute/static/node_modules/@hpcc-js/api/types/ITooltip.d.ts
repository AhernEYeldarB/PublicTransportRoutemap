import { Widget } from "@hpcc-js/common";
import "../src/ITooltip.css";
export declare abstract class ITooltip extends Widget {
    protected _valueFormatter: any;
    layerEnter: any;
    layerUpdate: any;
    layerExit: any;
    tooltip: any;
    constructor();
    abstract target(): any;
    abstract target(_: any): this;
    tooltipEnter(element: any): void;
    tooltipUpdate(): void;
    tooltipExit(): void;
    _tooltipHTML(d: any): any;
    tooltipHTML(_: any): any;
    tooltipFormat(opts?: {
        label?: string | number;
        series?: string | number;
        value?: Date | string | number;
        arr?: Array<{
            color: string;
            label: string;
            value: string;
        }>;
    }): string;
    tooltipKeyValueFormat(titleKey: string, obj: object): string;
    tooltipStyle: {
        (): "default" | "none" | "series-table";
        (_: "default" | "none" | "series-table"): ITooltip;
    };
    tooltipFollowMouse: {
        (): boolean;
        (_: boolean): ITooltip;
    };
    tooltipValueFormat: (_?: any) => string | ITooltip;
    tooltipSeriesColor: {
        (): string;
        (_: string): ITooltip;
    };
    tooltipLabelColor: {
        (): string;
        (_: string): ITooltip;
    };
    tooltipLabelColor_exists: () => boolean;
    tooltipValueColor: {
        (): string;
        (_: string): ITooltip;
    };
    tooltipTick: {
        (): boolean;
        (_: boolean): ITooltip;
    };
    tooltipOffset: {
        (): number;
        (_: number): ITooltip;
    };
    tooltipOffset_default: {
        (): number;
        (_: number): ITooltip;
    };
}
//# sourceMappingURL=ITooltip.d.ts.map