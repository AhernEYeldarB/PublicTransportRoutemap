import * as L from "leaflet";
import "../../src/plugins/D3SvgOverlay.css";
export declare class LeafletLayer extends L.Layer {
    options: any;
    _rootGroup: any;
}
export declare type DrawCallback = (element: any, projection: any, zoom: any) => void;
export declare class D3SvgOverlay extends LeafletLayer {
    private _svg;
    map: any;
    selection: any;
    projection: any;
    private _pixelOrigin;
    private _zoomDiff;
    private _zoom;
    private _scale;
    private _shift;
    private _wgsOrigin;
    private _wgsInitialShift;
    constructor(options?: {});
    svg(): any;
    private _drawCallback;
    drawCallback(): DrawCallback;
    drawCallback(_: DrawCallback): this;
    getBounds(): L.LatLngBounds;
    _undef(a: any): boolean;
    _options(options: any): any;
    draw(): void;
    _zoomChange(evt: any): void;
    onAdd(map: any): this;
    getEvents(): {
        zoomend: (evt: any) => void;
        viewreset: (evt: any) => void;
    };
    onRemove(map: any): this;
    addTo(map: any): this;
}
//# sourceMappingURL=D3SvgOverlay.d.ts.map